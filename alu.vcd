$date
	Mon Oct  3 23:07:48 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testslt $end
$var wire 1 ! result $end
$var reg 32 " operandA [31:0] $end
$var reg 32 # operandB [31:0] $end
$scope module myALU $end
$var wire 1 $ carryout $end
$var wire 32 % operandA [31:0] $end
$var wire 32 & operandB [31:0] $end
$var wire 1 ' overflow $end
$var wire 1 ! result $end
$var wire 32 ( subResult [31:0] $end
$scope module myALU $end
$var wire 1 ) M $end
$var wire 32 * MxorB [31:0] $end
$var wire 32 + andResult [31:0] $end
$var wire 1 $ carryout $end
$var wire 31 , carryoutin [30:0] $end
$var wire 32 - operandA [31:0] $end
$var wire 32 . operandB [31:0] $end
$var wire 1 ' overflow $end
$scope module myxor $end
$var wire 32 / andResult [31:0] $end
$var wire 32 0 operandA [31:0] $end
$var wire 1 ) operandB $end
$scope begin gen1[0] $end
$upscope $end
$scope begin gen1[1] $end
$upscope $end
$scope begin gen1[2] $end
$upscope $end
$scope begin gen1[3] $end
$upscope $end
$scope begin gen1[4] $end
$upscope $end
$scope begin gen1[5] $end
$upscope $end
$scope begin gen1[6] $end
$upscope $end
$scope begin gen1[7] $end
$upscope $end
$scope begin gen1[8] $end
$upscope $end
$scope begin gen1[9] $end
$upscope $end
$scope begin gen1[10] $end
$upscope $end
$scope begin gen1[11] $end
$upscope $end
$scope begin gen1[12] $end
$upscope $end
$scope begin gen1[13] $end
$upscope $end
$scope begin gen1[14] $end
$upscope $end
$scope begin gen1[15] $end
$upscope $end
$scope begin gen1[16] $end
$upscope $end
$scope begin gen1[17] $end
$upscope $end
$scope begin gen1[18] $end
$upscope $end
$scope begin gen1[19] $end
$upscope $end
$scope begin gen1[20] $end
$upscope $end
$scope begin gen1[21] $end
$upscope $end
$scope begin gen1[22] $end
$upscope $end
$scope begin gen1[23] $end
$upscope $end
$scope begin gen1[24] $end
$upscope $end
$scope begin gen1[25] $end
$upscope $end
$scope begin gen1[26] $end
$upscope $end
$scope begin gen1[27] $end
$upscope $end
$scope begin gen1[28] $end
$upscope $end
$scope begin gen1[29] $end
$upscope $end
$scope begin gen1[30] $end
$upscope $end
$scope begin gen1[31] $end
$upscope $end
$upscope $end
$scope module add0 $end
$var wire 1 1 AandB $end
$var wire 1 2 AxorB $end
$var wire 1 3 AxorBandcarryin $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 ) carryin $end
$var wire 1 6 carryout $end
$var wire 1 7 sum $end
$upscope $end
$scope module add31 $end
$var wire 1 8 AandB $end
$var wire 1 9 AxorB $end
$var wire 1 : AxorBandcarryin $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = carryin $end
$var wire 1 $ carryout $end
$var wire 1 > sum $end
$upscope $end
$scope begin gen1[1] $end
$scope module addgates $end
$var wire 1 ? AandB $end
$var wire 1 @ AxorB $end
$var wire 1 A AxorBandcarryin $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D carryin $end
$var wire 1 E carryout $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$scope begin gen1[2] $end
$scope module addgates $end
$var wire 1 G AandB $end
$var wire 1 H AxorB $end
$var wire 1 I AxorBandcarryin $end
$var wire 1 J a $end
$var wire 1 K b $end
$var wire 1 L carryin $end
$var wire 1 M carryout $end
$var wire 1 N sum $end
$upscope $end
$upscope $end
$scope begin gen1[3] $end
$scope module addgates $end
$var wire 1 O AandB $end
$var wire 1 P AxorB $end
$var wire 1 Q AxorBandcarryin $end
$var wire 1 R a $end
$var wire 1 S b $end
$var wire 1 T carryin $end
$var wire 1 U carryout $end
$var wire 1 V sum $end
$upscope $end
$upscope $end
$scope begin gen1[4] $end
$scope module addgates $end
$var wire 1 W AandB $end
$var wire 1 X AxorB $end
$var wire 1 Y AxorBandcarryin $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ carryin $end
$var wire 1 ] carryout $end
$var wire 1 ^ sum $end
$upscope $end
$upscope $end
$scope begin gen1[5] $end
$scope module addgates $end
$var wire 1 _ AandB $end
$var wire 1 ` AxorB $end
$var wire 1 a AxorBandcarryin $end
$var wire 1 b a $end
$var wire 1 c b $end
$var wire 1 d carryin $end
$var wire 1 e carryout $end
$var wire 1 f sum $end
$upscope $end
$upscope $end
$scope begin gen1[6] $end
$scope module addgates $end
$var wire 1 g AandB $end
$var wire 1 h AxorB $end
$var wire 1 i AxorBandcarryin $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l carryin $end
$var wire 1 m carryout $end
$var wire 1 n sum $end
$upscope $end
$upscope $end
$scope begin gen1[7] $end
$scope module addgates $end
$var wire 1 o AandB $end
$var wire 1 p AxorB $end
$var wire 1 q AxorBandcarryin $end
$var wire 1 r a $end
$var wire 1 s b $end
$var wire 1 t carryin $end
$var wire 1 u carryout $end
$var wire 1 v sum $end
$upscope $end
$upscope $end
$scope begin gen1[8] $end
$scope module addgates $end
$var wire 1 w AandB $end
$var wire 1 x AxorB $end
$var wire 1 y AxorBandcarryin $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 | carryin $end
$var wire 1 } carryout $end
$var wire 1 ~ sum $end
$upscope $end
$upscope $end
$scope begin gen1[9] $end
$scope module addgates $end
$var wire 1 !" AandB $end
$var wire 1 "" AxorB $end
$var wire 1 #" AxorBandcarryin $end
$var wire 1 $" a $end
$var wire 1 %" b $end
$var wire 1 &" carryin $end
$var wire 1 '" carryout $end
$var wire 1 (" sum $end
$upscope $end
$upscope $end
$scope begin gen1[10] $end
$scope module addgates $end
$var wire 1 )" AandB $end
$var wire 1 *" AxorB $end
$var wire 1 +" AxorBandcarryin $end
$var wire 1 ," a $end
$var wire 1 -" b $end
$var wire 1 ." carryin $end
$var wire 1 /" carryout $end
$var wire 1 0" sum $end
$upscope $end
$upscope $end
$scope begin gen1[11] $end
$scope module addgates $end
$var wire 1 1" AandB $end
$var wire 1 2" AxorB $end
$var wire 1 3" AxorBandcarryin $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 6" carryin $end
$var wire 1 7" carryout $end
$var wire 1 8" sum $end
$upscope $end
$upscope $end
$scope begin gen1[12] $end
$scope module addgates $end
$var wire 1 9" AandB $end
$var wire 1 :" AxorB $end
$var wire 1 ;" AxorBandcarryin $end
$var wire 1 <" a $end
$var wire 1 =" b $end
$var wire 1 >" carryin $end
$var wire 1 ?" carryout $end
$var wire 1 @" sum $end
$upscope $end
$upscope $end
$scope begin gen1[13] $end
$scope module addgates $end
$var wire 1 A" AandB $end
$var wire 1 B" AxorB $end
$var wire 1 C" AxorBandcarryin $end
$var wire 1 D" a $end
$var wire 1 E" b $end
$var wire 1 F" carryin $end
$var wire 1 G" carryout $end
$var wire 1 H" sum $end
$upscope $end
$upscope $end
$scope begin gen1[14] $end
$scope module addgates $end
$var wire 1 I" AandB $end
$var wire 1 J" AxorB $end
$var wire 1 K" AxorBandcarryin $end
$var wire 1 L" a $end
$var wire 1 M" b $end
$var wire 1 N" carryin $end
$var wire 1 O" carryout $end
$var wire 1 P" sum $end
$upscope $end
$upscope $end
$scope begin gen1[15] $end
$scope module addgates $end
$var wire 1 Q" AandB $end
$var wire 1 R" AxorB $end
$var wire 1 S" AxorBandcarryin $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" carryin $end
$var wire 1 W" carryout $end
$var wire 1 X" sum $end
$upscope $end
$upscope $end
$scope begin gen1[16] $end
$scope module addgates $end
$var wire 1 Y" AandB $end
$var wire 1 Z" AxorB $end
$var wire 1 [" AxorBandcarryin $end
$var wire 1 \" a $end
$var wire 1 ]" b $end
$var wire 1 ^" carryin $end
$var wire 1 _" carryout $end
$var wire 1 `" sum $end
$upscope $end
$upscope $end
$scope begin gen1[17] $end
$scope module addgates $end
$var wire 1 a" AandB $end
$var wire 1 b" AxorB $end
$var wire 1 c" AxorBandcarryin $end
$var wire 1 d" a $end
$var wire 1 e" b $end
$var wire 1 f" carryin $end
$var wire 1 g" carryout $end
$var wire 1 h" sum $end
$upscope $end
$upscope $end
$scope begin gen1[18] $end
$scope module addgates $end
$var wire 1 i" AandB $end
$var wire 1 j" AxorB $end
$var wire 1 k" AxorBandcarryin $end
$var wire 1 l" a $end
$var wire 1 m" b $end
$var wire 1 n" carryin $end
$var wire 1 o" carryout $end
$var wire 1 p" sum $end
$upscope $end
$upscope $end
$scope begin gen1[19] $end
$scope module addgates $end
$var wire 1 q" AandB $end
$var wire 1 r" AxorB $end
$var wire 1 s" AxorBandcarryin $end
$var wire 1 t" a $end
$var wire 1 u" b $end
$var wire 1 v" carryin $end
$var wire 1 w" carryout $end
$var wire 1 x" sum $end
$upscope $end
$upscope $end
$scope begin gen1[20] $end
$scope module addgates $end
$var wire 1 y" AandB $end
$var wire 1 z" AxorB $end
$var wire 1 {" AxorBandcarryin $end
$var wire 1 |" a $end
$var wire 1 }" b $end
$var wire 1 ~" carryin $end
$var wire 1 !# carryout $end
$var wire 1 "# sum $end
$upscope $end
$upscope $end
$scope begin gen1[21] $end
$scope module addgates $end
$var wire 1 ## AandB $end
$var wire 1 $# AxorB $end
$var wire 1 %# AxorBandcarryin $end
$var wire 1 &# a $end
$var wire 1 '# b $end
$var wire 1 (# carryin $end
$var wire 1 )# carryout $end
$var wire 1 *# sum $end
$upscope $end
$upscope $end
$scope begin gen1[22] $end
$scope module addgates $end
$var wire 1 +# AandB $end
$var wire 1 ,# AxorB $end
$var wire 1 -# AxorBandcarryin $end
$var wire 1 .# a $end
$var wire 1 /# b $end
$var wire 1 0# carryin $end
$var wire 1 1# carryout $end
$var wire 1 2# sum $end
$upscope $end
$upscope $end
$scope begin gen1[23] $end
$scope module addgates $end
$var wire 1 3# AandB $end
$var wire 1 4# AxorB $end
$var wire 1 5# AxorBandcarryin $end
$var wire 1 6# a $end
$var wire 1 7# b $end
$var wire 1 8# carryin $end
$var wire 1 9# carryout $end
$var wire 1 :# sum $end
$upscope $end
$upscope $end
$scope begin gen1[24] $end
$scope module addgates $end
$var wire 1 ;# AandB $end
$var wire 1 <# AxorB $end
$var wire 1 =# AxorBandcarryin $end
$var wire 1 ># a $end
$var wire 1 ?# b $end
$var wire 1 @# carryin $end
$var wire 1 A# carryout $end
$var wire 1 B# sum $end
$upscope $end
$upscope $end
$scope begin gen1[25] $end
$scope module addgates $end
$var wire 1 C# AandB $end
$var wire 1 D# AxorB $end
$var wire 1 E# AxorBandcarryin $end
$var wire 1 F# a $end
$var wire 1 G# b $end
$var wire 1 H# carryin $end
$var wire 1 I# carryout $end
$var wire 1 J# sum $end
$upscope $end
$upscope $end
$scope begin gen1[26] $end
$scope module addgates $end
$var wire 1 K# AandB $end
$var wire 1 L# AxorB $end
$var wire 1 M# AxorBandcarryin $end
$var wire 1 N# a $end
$var wire 1 O# b $end
$var wire 1 P# carryin $end
$var wire 1 Q# carryout $end
$var wire 1 R# sum $end
$upscope $end
$upscope $end
$scope begin gen1[27] $end
$scope module addgates $end
$var wire 1 S# AandB $end
$var wire 1 T# AxorB $end
$var wire 1 U# AxorBandcarryin $end
$var wire 1 V# a $end
$var wire 1 W# b $end
$var wire 1 X# carryin $end
$var wire 1 Y# carryout $end
$var wire 1 Z# sum $end
$upscope $end
$upscope $end
$scope begin gen1[28] $end
$scope module addgates $end
$var wire 1 [# AandB $end
$var wire 1 \# AxorB $end
$var wire 1 ]# AxorBandcarryin $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# carryin $end
$var wire 1 a# carryout $end
$var wire 1 b# sum $end
$upscope $end
$upscope $end
$scope begin gen1[29] $end
$scope module addgates $end
$var wire 1 c# AandB $end
$var wire 1 d# AxorB $end
$var wire 1 e# AxorBandcarryin $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 h# carryin $end
$var wire 1 i# carryout $end
$var wire 1 j# sum $end
$upscope $end
$upscope $end
$scope begin gen1[30] $end
$scope module addgates $end
$var wire 1 k# AandB $end
$var wire 1 l# AxorB $end
$var wire 1 m# AxorBandcarryin $end
$var wire 1 n# a $end
$var wire 1 o# b $end
$var wire 1 p# carryin $end
$var wire 1 q# carryout $end
$var wire 1 r# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xr#
xq#
xp#
zo#
1n#
xm#
xl#
xk#
xj#
xi#
xh#
zg#
1f#
xe#
xd#
xc#
xb#
xa#
x`#
z_#
1^#
x]#
x\#
x[#
xZ#
xY#
xX#
zW#
1V#
xU#
xT#
xS#
xR#
xQ#
xP#
zO#
1N#
xM#
xL#
xK#
xJ#
xI#
xH#
zG#
1F#
xE#
xD#
xC#
xB#
xA#
x@#
z?#
1>#
x=#
x<#
x;#
x:#
x9#
x8#
z7#
16#
x5#
x4#
x3#
x2#
x1#
x0#
z/#
1.#
x-#
x,#
x+#
x*#
x)#
x(#
z'#
1&#
x%#
x$#
x##
x"#
x!#
x~"
z}"
1|"
x{"
xz"
xy"
xx"
xw"
xv"
zu"
1t"
xs"
xr"
xq"
xp"
xo"
xn"
zm"
1l"
xk"
xj"
xi"
xh"
xg"
xf"
ze"
1d"
xc"
xb"
xa"
x`"
x_"
x^"
z]"
1\"
x["
xZ"
xY"
xX"
xW"
xV"
zU"
1T"
xS"
xR"
xQ"
xP"
xO"
xN"
zM"
1L"
xK"
xJ"
xI"
xH"
xG"
xF"
zE"
1D"
xC"
xB"
xA"
x@"
x?"
x>"
z="
1<"
x;"
x:"
x9"
x8"
x7"
x6"
z5"
04"
x3"
x2"
z1"
x0"
x/"
x."
z-"
0,"
x+"
x*"
z)"
x("
x'"
x&"
z%"
0$"
x#"
x""
z!"
x~
x}
x|
z{
0z
xy
xx
zw
xv
xu
xt
zs
0r
xq
xp
zo
xn
xm
xl
zk
0j
xi
xh
zg
xf
xe
xd
zc
0b
xa
x`
z_
x^
x]
x\
z[
1Z
xY
xX
xW
xV
xU
xT
zS
0R
xQ
xP
zO
xN
xM
xL
zK
0J
xI
xH
zG
xF
xE
xD
zC
0B
xA
x@
z?
x>
x=
z<
1;
x:
x9
x8
x7
x6
z5
04
x3
x2
z1
b10000 0
bz /
b10000 .
b11111111111111111111000000010000 -
bx ,
bx +
bz *
1)
bx (
x'
b10000 &
b11111111111111111111000000010000 %
x$
b10000 #
b11111111111111111111000000010000 "
x!
$end
#30000
01"
0)"
0!"
0w
0o
0g
0_
0O
0G
0?
01
#60000
1<
1o#
1g#
1_#
1W#
1O#
1G#
1?#
17#
1/#
1'#
1}"
1u"
1m"
1e"
1]"
1U"
1M"
1E"
1="
15"
1-"
1%"
1{
1s
1k
1c
0[
1S
1K
1C
15
b11111111111111111111111111101111 *
b11111111111111111111111111101111 /
#90000
18
1k#
1c#
1[#
1S#
1K#
1C#
1;#
13#
1+#
1##
1y"
1q"
1i"
1a"
1Y"
1Q"
1I"
1A"
19"
0W
#120000
1=
1p#
1h#
1`#
1X#
1P#
1H#
1@#
18#
10#
1(#
1~"
1v"
1n"
1f"
1^"
1V"
1N"
1F"
1$
1q#
1i#
1a#
1Y#
1Q#
1I#
1A#
19#
11#
1)#
1!#
1w"
1o"
1g"
1_"
1W"
1O"
1G"
1?"
b1111111111111111111xxxxxxxxxxxx ,
09
0l#
0d#
0\#
0T#
0L#
0D#
0<#
04#
0,#
0$#
0z"
0r"
0j"
0b"
0Z"
0R"
0J"
0B"
0:"
12"
1*"
1""
1x
1p
1h
1`
1X
1P
1H
1@
12
#150000
0:
0m#
0e#
0]#
0U#
0M#
0E#
0=#
05#
0-#
0%#
0{"
0s"
0k"
0c"
0["
0S"
0K"
0C"
0;"
13
#180000
1D
16
b1111111111111111111xxxxxxxxxxx1 ,
1>
1r#
1j#
1b#
1Z#
1R#
1J#
1B#
1:#
12#
1*#
1"#
1x"
1p"
1h"
1`"
1X"
1P"
1H"
0'
07
b1111111111111111111xxxxxxxxxxxx0 (
b1111111111111111111xxxxxxxxxxxx0 +
#210000
1A
#240000
1L
1E
b1111111111111111111xxxxxxxxxx11 ,
0F
b1111111111111111111xxxxxxxxxxx00 (
b1111111111111111111xxxxxxxxxxx00 +
1!
#270000
1I
#300000
1T
1M
b1111111111111111111xxxxxxxxx111 ,
0N
b1111111111111111111xxxxxxxxxx000 (
b1111111111111111111xxxxxxxxxx000 +
#330000
1Q
#360000
1\
1U
b1111111111111111111xxxxxxxx1111 ,
0V
b1111111111111111111xxxxxxxxx0000 (
b1111111111111111111xxxxxxxxx0000 +
#390000
1Y
#420000
1d
1]
b1111111111111111111xxxxxxx11111 ,
0^
b1111111111111111111xxxxxxxx00000 (
b1111111111111111111xxxxxxxx00000 +
#450000
1a
#480000
1l
1e
b1111111111111111111xxxxxx111111 ,
0f
b1111111111111111111xxxxxxx000000 (
b1111111111111111111xxxxxxx000000 +
#510000
1i
#540000
1t
1m
b1111111111111111111xxxxx1111111 ,
0n
b1111111111111111111xxxxxx0000000 (
b1111111111111111111xxxxxx0000000 +
#570000
1q
#600000
1|
1u
b1111111111111111111xxxx11111111 ,
0v
b1111111111111111111xxxxx00000000 (
b1111111111111111111xxxxx00000000 +
#630000
1y
#660000
1&"
1}
b1111111111111111111xxx111111111 ,
0~
b1111111111111111111xxxx000000000 (
b1111111111111111111xxxx000000000 +
#690000
1#"
#720000
1."
1'"
b1111111111111111111xx1111111111 ,
0("
b1111111111111111111xxx0000000000 (
b1111111111111111111xxx0000000000 +
#750000
1+"
#780000
16"
1/"
b1111111111111111111x11111111111 ,
00"
b1111111111111111111xx00000000000 (
b1111111111111111111xx00000000000 +
#810000
13"
#840000
1>"
17"
b1111111111111111111111111111111 ,
08"
b1111111111111111111x000000000000 (
b1111111111111111111x000000000000 +
#900000
1@"
b11111111111111111111000000000000 (
b11111111111111111111000000000000 +
#100000000
